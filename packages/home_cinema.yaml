sensor:
- platform: template
  sensors:
    home_cinema_state:
      friendly_name: Status home cinema
      value_template: >
        {% if not is_state_attr('media_player.denon_avr_x2100w', 'source', 'DVD') %}
          off
        {% else %}
          {{ states('media_player.plex_plex_htpc_for_windows_watson') }}
        {% endif %}

scene:
- name: home_cinema_playing
  entities:
    light.lamp_tv:
      state: on
      brightness: 30
    light.lamp_bank:
      state: on
      brightness: 30
    light.lamp_dressoir:
      state: on
      brightness: 30
    light.lights_group_eettafel:
      state: on
      brightness: 15
    light.lights_group_keuken:
      state: off

- name: home_cinema_paused
  entities:
    light.lamp_tv:
      state: on
      brightness: 100
    light.lamp_bank:
      state: on
      brightness: 100
    light.lamp_dressoir:
      state: on
      brightness: 100
    light.lights_group_eettafel:
      state: on
      brightness: 90
    light.lights_group_keuken:
      state: on
      brightness: 160

- name: home_cinema_off
  entities:
    light.hue_play_1: off
    light.hue_play_2: off

script:
  home_cinema_start_on_cast:
    alias: Start on cast
    mode: single
    sequence:
    - service: remote.turn_on
      data:
        entity_id: remote.tv_woonkamer
        activity: 'Watch a Movie'
    - service: media_player.media_pause
      entity_id: media_player.plex_plex_htpc_for_windows_watson
    - delay: 10
    - service: media_player.media_play
      entity_id: media_player.plex_plex_htpc_for_windows_watson

  home_cinema_switch_on_cast:
    alias: Switch source on cast
    mode: single
    sequence:
    - service: media_player.volume_set
      data:
        entity_id: media_player.denon_avr_x2100w
        volume_level: 0.25
    - service: remote.turn_on
      data:
        entity_id: remote.tv_woonkamer
        activity: 'Watch a Movie'

automation:
- id: home_cinema_ambilight_off
  alias: Ambilight uit
  initial_state: 'on'
  trigger: 
    platform: state
    entity_id: media_player.denon_avr_x2100w
    to: 'off'
  action:
    service: scene.turn_on
    entity_id: scene.home_cinema_off

- id: home_cinema_playback_change
  alias: Film status
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: binary_sensor.lights_donker_buiten
    to: 'on'
  - platform: state
    entity_id: sensor.home_cinema_state
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.lights_donker_buiten
      state: 'on'
    - condition: template
      value_template: >
        {{ is_state('sensor.home_cinema_state', 'playing') or is_state('sensor.home_cinema_state', 'paused') }}
  action:
    service: scene.turn_on
    data_template:
      entity_id: '{{ "scene.home_cinema_" + states("sensor.home_cinema_state") }}'

- id: home_cinema_start_on_cast
  alias: Casting Plex
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: media_player.plex_plex_htpc_for_windows_watson
    to: playing
  condition:
    condition: template
    value_template: >
      {{ is_state('sensor.home_cinema_state', 'off') }}
  action:
    service: script.turn_on
    data_template:
      entity_id: >
        {% if is_state('media_player.denon_avr_x2100w', 'off') %}
          script.home_cinema_start_on_cast
        {% else %}
          script.home_cinema_switch_on_cast
        {% endif %}
