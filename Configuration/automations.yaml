- alias: "Forceer thuis"
  trigger:
    platform: state
    entity_id: input_boolean.forceer_thuis
    to: 'on'
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.forceer_afwezig

- alias: "Forceer afwezig"
  trigger:
    platform: state
    entity_id: input_boolean.forceer_afwezig
    to: 'on'
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.forceer_thuis

- alias: "Opstaan"
  trigger:
    platform: time
    at: "07:30:00"
  action:
    service: scene.turn_on
    entity_id: scene.opstaan

- alias: "Lichten aan"
  trigger:
    - platform: state
      entity_id: binary_sensor.donker_buiten
      to: 'on'
    - platform: state
      entity_id: binary_sensor.iemand_thuis
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: binary_sensor.iemand_thuis
        state: 'on'
      - condition: state
        entity_id: binary_sensor.donker_buiten
        state: 'on'
      - condition: state
        entity_id: binary_sensor.film_kijken
        state: 'off'
      - condition: state
        entity_id: input_boolean.slapen
        state: 'off'
  action:
    service: scene.turn_on
    entity_id: scene.licht_normaal

- alias: "Lichten uit"
  trigger:
    - platform: state
      entity_id: binary_sensor.iemand_thuis
      to: 'off'
    - platform: state
      entity_id: binary_sensor.donker_buiten
      to: 'off'
  action:
    service: light.turn_off

- alias: "Verwarming aan"
  trigger:
    - platform: state
      entity_id: binary_sensor.iemand_thuis
      to: 'on'
    - platform: time
      at: "09:00:00"
  condition:
    condition: and
    conditions:
    - condition: time
      after: "07:00:00"
      before: "22:30:00"
    - condition: state
      entity_id: input_boolean.slapen
      state: 'off'
    - condition: state
      entity_id: binary_sensor.iemand_thuis
      state: 'on'
  action:
    - service: climate.set_operation_mode
      data: 
        entity_id: climate.toon_van_eneco
        operation_mode: "heat"
    - service: input_boolean.turn_off
      entity_id: input_boolean.verwarming_override

- alias: "Verwarming laag"
  trigger:
    - platform: state
      entity_id: binary_sensor.iemand_thuis
      to: 'off'
    - platform: time
      at: "22:30:00"
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: climate.toon_van_eneco
        state: 'Comfort'
      - condition: state
        entity_id: climate.toon_van_eneco
        state: 'Home'
        #docs kloppen niet, 'Thuis' moet 'Home' zijn
  action:
    service: climate.set_operation_mode
    data: 
      entity_id: climate.toon_van_eneco
      operation_mode: "cool"

- alias: "Verwarming uit"
  trigger:
    platform: state
    entity_id: binary_sensor.iemand_thuis
    to: 'off'
    for:
      hours: 10
  condition:
    condition: state
    entity_id: input_boolean.verwarming_override
    state: 'off'
  action:
    service: climate.set_operation_mode
    data: 
      entity_id: climate.toon_van_eneco
      operation_mode: "eco"

- alias: "Boiler keuken uit"
  trigger:
    platform: time
    at: "23:59:00"
  action:
    service: switch.turn_off
    entity_id: switch.boiler_keuken
    
- alias: "Boiler keuken aan (werkdag)"
  trigger:
    platform: time
    at: "17:00:00"
  condition: 
    condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  action:
    service: switch.turn_on
    entity_id: switch.boiler_keuken
  
- alias: "Boiler keuken aan (weekend)"
  trigger:
    platform: time
    at: "08:00:00"
  condition: 
    condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'off'
  action:
    service: switch.turn_on
    entity_id: switch.boiler_keuken

- alias: "Film kijken"
  trigger:
    platform: state
    entity_id: binary_sensor.film_kijken
    to: 'on'
  action:
    service: scene.turn_on
    entity_id: scene.film_start
  
- alias: "Film gepauzeerd"
  trigger:
    platform: state
    entity_id: media_player.mycroft
    from: "playing"
  condition:
    condition: state
    entity_id: binary_sensor.donker_buiten
    state: 'on'
  action:
    service: scene.turn_on
    entity_id: scene.film_gepauzeerd
  
- alias: "Film gestart/hervat"
  trigger:
    platform: state
    entity_id: media_player.mycroft
    to: "playing"
  action:
    service: scene.turn_on
    entity_id: scene.film_actief
    
- alias: "Film gestopt"
  trigger:
    platform: state
    entity_id: binary_sensor.film_kijken
    from: 'on'
    to: 'off'
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.donker_buiten
      state: 'on'
    - condition: state
      entity_id: input_boolean.slapen
      state: 'off'
  action:
    - service: scene.turn_on
      entity_id: scene.licht_normaal
      
- alias: "Stand gordijn"
  trigger:
    platform: state
    entity_id: sensor.positie_gordijn
  action:
    service: cover.set_cover_position
    data_template:
      entity_id: cover.gordijn_voor
      position: "{{ states('sensor.positie_gordijn') }}"
        
- alias: "Nieuwe download Sonarr"
  trigger:
    platform: state
    entity_id: sensor.sonarr
  action:
    service: notify.telegram
    data_template:
      title: "Sonarr"
      message: "{{ states('sensor.sonarr') }}"

- alias: "Nieuwe download Radarr"
  trigger:
    platform: state
    entity_id: sensor.radarr
  action:
    service: notify.telegram
    data_template:
      title: "Radarr"
      message: "{{ states('sensor.radarr') }}"

- alias: "Telegram opvragen temperatuur"
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/temperatuur'
  action:
    - service: notify.telegram
      data_template:
        message: "De temperatuur is {{ states.climate.toon_van_eneco.attributes.current_temperature }} °C"

- alias: "Telegram mag verwarming aan"
  trigger:
    platform: time
    at: "17:15:00"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: 'on'
      - condition: state
        entity_id: binary_sensor.iemand_thuis
        state: 'off'
      - condition: numeric_state
        entity_id: sensor.br_temperature
        below: 5
  action:
    service: notify.telegram
    data_template:
      message: "Het is op dit moment {{ states.sensor.br_temperature.state }} °C buiten, zal ik de verwarming vast aan zetten?"
      data:
        inline_keyboard:
          - 'Ja graag:/verwarmingaan, Nee bedankt:/verwarminguit'

- alias: "Telegram verwarming aan"
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/verwarmingaan'
  action:
    - service: notify.telegram
      data_template:
        message: "Ok, de verwarming staat aan!"
    - service: scene.turn_on
      entity_id: scene.verwarming_normaal
    - condition: state
      entity_id: binary_sensor.iemand_thuis
      state: 'off'
    - service: input_boolean.turn_on
      entity_id: input_boolean.verwarming_override
          
- alias: "Beweging keuken"
  trigger:
    platform: state
    entity_id: sensor.beweging_keuken
    to: 'True'
  action:
    service: input_datetime.set_datetime
    data_template:
      entity_id: input_datetime.laatste_beweging_keuken
      date: "{{ now().strftime('%Y-%m-%d') }}"
      time: "{{ now().strftime('%H:%M:%S') }}"

- alias: "Beweging werkkamer"
  trigger:
    platform: state
    entity_id: sensor.beweging_werkkamer
    to: 'True'
  action:
    service: input_datetime.set_datetime
    data_template:
      entity_id: input_datetime.laatste_beweging_werkkamer
      date: "{{ now().strftime('%Y-%m-%d') }}"
      time: "{{ now().strftime('%H:%M:%S') }}"

- alias: "Beweging gang"
  trigger:
    platform: state
    entity_id: sensor.beweging_gang
    to: 'True'
  action:
    service: input_datetime.set_datetime
    data_template:
      entity_id: input_datetime.laatste_beweging_gang
      date: "{{ now().strftime('%Y-%m-%d') }}"
      time: "{{ now().strftime('%H:%M:%S') }}"